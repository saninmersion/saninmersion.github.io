(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{170:function(e,t){e.exports={attributes:{title:"“Object-fit” and “Object-position” — Super CSS",image:"object-fit-and-object-position-super-css.png",excerpt:"The object-fit and the object-position css property together provide us with the power to manipulate an image or a video and create some magic.",published_date:"2019-03-09T18:15:00.000Z",tags:["css","object-fit","object-position"],url:"object-fit-and-object-position-super-css",featured_image:"/uploads/frames-on-white-background-310435.jpg",canonical_url:"https://www.ktmbytes.com/object-fit-and-object-position-super-css/",subtitle:"The object-fit and the object-position css property together provide us with the power to manipulate an image or a video and create some magic."},html:'<p>The <strong>object-fit</strong> <strong>CSS</strong> property is used to specify how an or should be resized to fit its container and the <strong>object-position</strong> css property is used together with object-fit to specify how an or should be positioned with x/y coordinates inside its “own content box”. Together they provide us with the power to manipulate an image or a video and create some magic.</p>\n<p><img src="/uploads/object-fit.png" alt=""></p>\n<h2>Object-fit</h2>\n<p>This property defines how an image or a video fits inside its content box.</p>\n<p>The <code>object-fit</code> property can have the following values:</p>\n<ul>\n<li><code>fill(default)</code> – The replaced content is sized to fill the element’s content box. If necessary, the object will be stretched or squished to fit</li>\n<li><code>contain</code> – The replaced content is scaled to maintain its aspect ratio while fitting within the element’s content box</li>\n<li><code>cover</code> – The replaced content is sized to maintain its aspect ratio while filling the element’s entire content box. The object will be clipped to fit</li>\n<li><code>none</code> – The replaced content is not resized</li>\n<li><code>scale-down</code> – The content is sized as if none or contain were specified (would result in a smaller concrete object size)</li>\n</ul>\n<h2>Object-position</h2>\n<p>The <code>object-position</code> property is used together with object-fit to specify how an <code>&lt;img&gt;</code> or <code>&lt;video&gt;</code> should be positioned with x/y coordinates inside its “own content box”.</p>\n<p>The object-position property is used together with object-fit property to move the image around the content box. The default value it takes is <code>object-position: 50% 50%</code>. This is the reason when we apply <code>object-fit: cover</code> the image is positioned in center by default. The x/y coordinates can take a ‘px’ value or a ‘percentage’ value.</p>\n<pre><code>img {\n\twidth: 100%;  \n    height: 100%;  \n    object-fit: none; \n    object-position: 5px 10%; \n }\n</code></pre>\n<p>The above code resizes an image to fit its content box, and position the image 5px from the left and 10% from the top inside the content box.</p>\n<p><img src="/uploads/object-position.png" alt=""></p>\n<p>Apart from providing x/y coordinates values, object-position supports values like ‘bottom’, ‘center’, ‘top’, ‘left’ and ‘right’ which are self-explanatory.</p>\n<p><strong>Browser support</strong></p>\n<p><code>object-fit</code> and <code>object-position</code> is supported by all latest version of browser except IE.</p>\n'}}}]);